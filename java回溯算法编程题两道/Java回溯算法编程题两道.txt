找出所有相加之和为?n 的?k?个数的组合。
组合中只允许含有 1 -?9 的正整数，并且每种组合中不存在重复的数字。


说明：

所有数字都是正整数。

解集不能包含重复的组合。?

示例 1:


输入: k = 3, n = 7

输出: [[1,2,4]]

示例 2:


输入: k = 3, n = 9

输出: [[1,2,6], [1,3,5], [2,3,4]]


来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/combination-sum-iii
代码：
class Solution {
    List<List<Integer>>list=new ArrayList<>();
    public List<List<Integer>> combinationSum3(int k, int n) {
        combination(1,k,n,new ArrayList<Integer>(),0);
        return list;
    }
    public void combination(int num,int k,int n,List<Integer>l,int sum){
        if(num>9&&l.size()<k){
            return;
        }
        if(l.size()==k){
            if(sum==n){
                list.add(new ArrayList<Integer>(l));
            }
            return;
        }
        for(int i=num;i<10;++i){
            if(n-sum<i){
                break;
            }
            l.add(i);
            combination(i+1,k,n,l,sum+i);
            l.remove(l.size()-1);
        }
    }
}
给定一个无重复元素的数组?candidates?和一个目标数?target?，
找出?candidates?中所有可以使数字和为?target?的组合。


candidates?中的数字可以无限制重复被选取。


说明：

所有数字（包括?target）都是正整数。
解集不能包含重复的组合。?

示例?1：


输入：candidates = [2,3,6,7], target = 7,
所求解集为：
[
  [7],
  [2,2,3]
]

示例?2：


输入：candidates = [2,3,5], target = 8,
所求解集为：
[
? [2,2,2,2],
? [2,3,3],
? [3,5]
]


来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/combination-sum
代码：
class Solution {
    List<List<Integer>>list=new ArrayList<>();
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
            combination(candidates,target,0,new ArrayList<Integer>());
            return list;
    }
    public void combination(int[]candidates,int target,int sum,List<Integer>l){
        if(sum==target){
            list.add(new ArrayList<Integer>(l));
            return;
        }
        for(int i=0;i<candidates.length;++i){
            if(target-sum<candidates[i]){
               continue;
            }
            if(l.size()>=1&&candidates[i]<l.get(l.size()-1)){
                continue;
            }
            l.add(candidates[i]);
            combination(candidates,target,sum+candidates[i],l);
            l.remove(l.size()-1);
        }
    }
}