请实现 copyRandomList 函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个 next 指针指向下一个节点，还有一个 random 指针指向链表中的任意节点或者 null。


输入：head = [[7,null],[13,0],[11,4],[10,2],[1,0]]

输出：[[7,null],[13,0],[11,4],[10,2],[1,0]]

示例 2：




输入：head = [[1,1],[2,1]]

输出：[[1,1],[2,1]]

示例 3：




输入：head = [[3,null],[3,0],[3,null]]

输出：[[3,null],[3,0],[3,null]]

示例 

输入：head = []

输出：[]

解释：给定的链表为空（空指针），因此返回 null。
代码：
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
class Solution {
    public Node copyRandomList(Node head) {
        if(head==null){
            return null;
        }
        Map<Node,Node>map=new HashMap<>();
        Node cur=head;
        while(cur!=null){
            int val=cur.val;
            Node node=new Node(val);
            if(!map.containsKey(cur)){
              map.put(cur,node);
            }
            cur=cur.next;
        }
        cur=head;
        while(cur!=null){
         map.get(cur).next=map.get(cur.next);
         map.get(cur).random=map.get(cur.random);
         cur=cur.next;
        }
        return map.get(head);
    }
}