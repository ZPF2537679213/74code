给定一个非负整数数组 A，返回一个数组，在该数组中， A 的所有偶数元素之后跟着所有奇数元素。
你可以返回满足此条件的任何数组作为答案。
class Solution {
    public int[] sortArrayByParity(int[] A) {
     int ou;
     int ji;
     for(ou=0;ou<A.length;ou++){
        if(A[ou]%2!=0){
            ji=ou+1;
         while(ji<A.length&&A[ji]%2!=0){
          ji++;
         }
         if(ji==A.length){
            break;
         }else{
             int tmp=A[ou];
             A[ou]=A[ji];
             A[ji]=tmp;
         }
        }
     }
     return A;
    }
}
给你一个整数数组?nums，请编写一个能够返回数组 “中心索引” 的方法。


数组 中心索引 是数组的一个索引，其左侧所有元素相加的和等于右侧所有元素相加的和。


如果数组不存在中心索引，返回 -1 。如果数组有多个中心索引，
应该返回最靠近左边的那一个。

注意：中心索引可能出现在数组的两端。
class Solution {
    public int pivotIndex(int[] nums) {
    int sum1=0,sum2=0;
    for(int x:nums){
     sum1+=x;
    }
    for(int i=0;i<nums.length;++i){
    sum1-=nums[i];
    if(sum1==sum2){
    return i;
    }
    sum2+=nums[i];
    }
    return -1;
    }
}