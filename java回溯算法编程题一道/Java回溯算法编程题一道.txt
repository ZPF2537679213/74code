给定一个字符串数组 arr，字符串 s 是将 arr 某一子序列字符串连接所得的字符串，
如果 s 中的每一个字符都只出现过一次，那么它就是一个可行解。


请返回所有可行解 s 中最长长度。

?


示例 1：


输入：arr = ["un","iq","ue"]

输出：4

解释：所有可能的串联组合是 "","un","iq","ue","uniq" 和 "ique"，最大长度为 4。


来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters
代码：
class Solution {
    public int maxlen;
    public int maxLength(List<String> arr) {
        for(int i=0;i<arr.size();++i){
             length(arr,0,i,new HashMap<Character,Integer>()); 
        }
       return maxlen;
    }
    public void length(List<String>arr,int len,int index,Map<Character,Integer>map){
        if(index==arr.size()){
            return;
        }
        for(int i=index;i<arr.size();++i){
            String x=arr.get(i);
            int j=0;
            while(j<x.length()&&!map.containsKey(x.charAt(j))){
                j++;
            }
            if(j==x.length()){
                for(j=0;j<x.length()&&!map.containsKey(x.charAt(j));++j){
                    map.put(x.charAt(j),1);
                }
                if(j==x.length()){
                maxlen=Math.max(maxlen,len+x.length());
                length(arr,len+x.length(),i+1,map);
                for(j=0;j<x.length();++j){
                    map.remove(x.charAt(j));
                }
                }else{
                    for(int k=0;k<j;++k){
                       map.remove(x.charAt(j)); 
                    }
                }
               
            }
            }
    }
}