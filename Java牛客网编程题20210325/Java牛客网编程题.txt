题目描述
输入n个整数，输出其中最小的k个。
本题有多组输入样例，请使用循环读入，比如while(cin>>)等方式处理
输入描述:
第一行输入两个整数n和k
第二行输入一个整数数组
输出描述:
输出一个从小到大排序的整数数组
示例1
输入
5 2
1 3 5 7 2
输出
1 2
代码：
import java.util.*;
public class Main{
    public static void main(String[]args){
        Scanner input=new Scanner(System.in);
        while(input.hasNext()){
            int n=input.nextInt();
            int k=input.nextInt();
            PriorityQueue<Integer>queue=new PriorityQueue<>(
            new Comparator<Integer>(){
                public int compare(Integer o1,Integer o2){
                    return o2-o1;
                }
            }
            );
            for(int i=0;i<n;++i){
                int x=input.nextInt();
                if(i<k){
                    queue.offer(x);
                }else{
                    if(x<queue.peek()){
                        queue.poll();
                        queue.offer(x);
                    }
                }
            }
            ArrayList<Integer>list=new ArrayList<>();
            for(int x:queue){
                list.add(x);
            }
            Collections.sort(list);
            for(int x:list){
                System.out.print(x+" ");
            }
            System.out.println();
        }
    }
}
题目描述
输入两个用字符串表示的整数，求它们所表示的数之和。
字符串的长度不超过10000。
本题含有多组样例输入。
输入描述:
输入两个字符串。保证字符串只含有'0'~'9'字符
输出描述:
输出求和后的结果
示例1
输入
9876543210
1234567890
输出
11111111100
import java.util.*;
public class Main{
    public static void main(String[]args){
        Scanner input=new Scanner(System.in);
        ArrayList<String>list=new ArrayList<>();
        while(input.hasNext()){
          String str1=input.next();
            StringBuilder s1=new StringBuilder();
            s1.append(str1);
          String str2=input.next();
            StringBuilder s2=new StringBuilder();
            s2.append(str2);
            StringBuilder end=new StringBuilder();
            while(s1.length()<s2.length()){
                s1.insert(0,'0');
            }
            while(s1.length()>s2.length()){
                s2.insert(0,'0');
            }
            int c=0;
            for(int i=s1.length()-1;i>=0;i--){
                char x=s1.charAt(i);
                char y=s2.charAt(i);
                
                int re=(x-'0')+(y-'0')+c;
                if(re<10){
                  end.insert(0,re);
                    c=0;
                }else{
                    end.insert(0,re%10);
                    c=1;
                    if(i==0){
                        end.insert(0,c);
                    }
                }
            }
            System.out.println(end.toString());
        }
    }
}