题目描述
问题描述：在计算机中，通配符一种特殊语法，广泛应用于文件搜索、数据库、正则表达式等领域。现要求各位实现字符串通配符的算法。
要求：
实现如下2个通配符：
*：匹配0个或以上的字符（字符由英文字母和数字0-9组成，不区分大小写。下同）
？：匹配1个字符
输入：
通配符表达式；
一组字符串。
输出：
返回匹配的结果，正确输出true，错误输出false
本题含有多组样例输入！
输入描述:
先输入一个带有通配符的字符串，再输入一个需要匹配的字符串
输出描述:
返回匹配的结果，正确输出true，错误输出fals
示例1
输入
te?t*.*
txt12.xls
输出
false
代码：
import java.util.Scanner;
public class Main{
    public static void main(String[]args){
        Scanner input=new Scanner(System.in);
        while(input.hasNext()){
            String str1=input.nextLine();
            String str2=input.nextLine();
            str1=str1.toLowerCase();
            str2=str2.toLowerCase();
            System.out.println(isMatch(str2,str1));
    }
  }
    public static boolean isMatch(String s, String p) {
     int i=0,j=0,newI=-1,newJ=-1;
     while(i<s.length()){
     if(j<p.length()&&s.charAt(i)==p.charAt(j)||j<p.length()&&p.charAt(j)=='?'){
     i++;
     j++;
     }else if(j<p.length()&&p.charAt(j)=='*'){
      newI=i;
      newJ=j++;
     }else if(newJ>-1){
      i=++newI;
      j=newJ+1;
     }else{
         return false;
     }
     }
     while(j<p.length()){
     if(p.charAt(j)!='*'){
      return false;
     }
     j++;
     }
     return true;
    }
}