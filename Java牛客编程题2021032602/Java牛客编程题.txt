题目描述
一个DNA序列由A/C/G/T四个字母的排列组合组成。G和C的比例（定义为GC-Ratio）是序列中G和C两个字母的总的出现次数除以总的字母数目（也就是序列长度）。在基因工程中，这个比例非常重要。因为高的GC-Ratio可能是基因的起始点。

给定一个很长的DNA序列，以及要求的最小子序列长度，研究人员经常会需要在其中找出GC-Ratio最高的子序列。

本题含有多组样例输入。

输入描述:
输入一个string型基因序列，和int型子串的长度

输出描述:
找出GC比例最高的子串,如果有多个输出第一个的子串

示例1
输入
AACTGTGCACGACCTGA
5
输出
GCACG
代码：
import java.util.*;
public class Main{
    public static void main(String[]args){
        Scanner input=new Scanner(System.in);
        while(input.hasNext()){
            String str=input.next();
            int n=input.nextInt();
            int maxIndex=0;
            int count=0;
            for(int i=0;i<str.length()-n;++i){
                String ss=str.substring(i,i+n);
                int cg=0;
                for(int j=0;j<n;++j){
                    if(ss.charAt(j)=='C'||ss.charAt(j)=='G'){
                        cg++;
                    }
                }
                if(cg>count){
                    maxIndex=i;
                   count=cg;
                }
            }
            System.out.println(str.substring(maxIndex,maxIndex+n));
        }
    }
}
题目描述

输入一个正整数，计算它在二进制下的1的个数。
注意多组输入输出！！！！！！
输入描述:
输入一个整数

输出描述:
计算整数二进制中1的个数

示例1
输入
5
输出
2
代码：
import java.util.*;
public class Main{
    public static void main(String[]args){
        Scanner input=new Scanner(System.in);
        while(input.hasNext()){
            int n=input.nextInt();
            int num=0;
            while(n!=0){
               n&=(n-1);
                num++;
            }
            System.out.println(num);
        }
    }
}