有重复字符串的排列组合。编写一种方法，计算某字符串的所有排列组合。


示例1:

 
输入：S = "qqe"

 输出：["eqq","qeq","qqe"]

示例2:

 
输入：S = "ab"
 
输出：["ab", "ba"]


来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/permutation-ii-lcci

代码：
class Solution {
    Set<String>set=new HashSet<>();
    public String[] permutation(String S) {
            permut(new StringBuilder(),new StringBuilder(S));
        String[]str=new String[set.size()];
        int i=0;
        for(String x:set){
            str[i]=x;
            i++;
        }
        return str;
    }
    public void permut(StringBuilder str,StringBuilder s){
        if(str.length()==s.length()){
            set.add(str.toString());
           return;
       }
       for(int i=0;i<s.length();++i){
         char x=s.charAt(i);
         if(i<s.length()-1&&s.charAt(i+1)==x){
             continue;
         }
      if(Character.isLetter(x)){
          str.append(x);
          s.setCharAt(i,'0');
            permut(str,s);
           s.setCharAt(i,x);
          str.deleteCharAt(str.length()-1);
      }
       }
      return;
    }
}
无重复字符串的排列组合。
编写一种方法，计算某字符串的所有排列组合，字符串每个字符均不相同。


示例1:

 
输入：S = "qwe"
 
输出：["qwe", "qew", "wqe", "weq", "ewq", "eqw"]

示例2:

 
输入：S = "ab"
 
输出：["ab", "ba"]


来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/permutation-i-lcci
代码：
class Solution {
    Set<String>set=new HashSet<>();
    public String[] permutation(String S) {
            permut(new StringBuilder(),new StringBuilder(S));
        String[]str=new String[set.size()];
        int i=0;
        for(String x:set){
            str[i]=x;
            i++;
        }
        return str;
    }
    public void permut(StringBuilder str,StringBuilder s){
        if(str.length()==s.length()){
                set.add(str.toString());
           return;
       }
       for(int i=0;i<s.length();++i){
         char x=s.charAt(i);
      if(Character.isLetter(x)){
          str.append(x);
          s.setCharAt(i,'0');
            permut(str,s);
           s.setCharAt(i,x);
          str.deleteCharAt(str.length()-1);
      }
       }
      return;
    }
}