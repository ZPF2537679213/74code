/*给定一个整数数组，判断是否存在重复元素。

如果存在一值在数组中出现至少两次，函数返回
true 。如果数组中每个元素都不相同，则返回 false 。


示例 1:

输入: [1,2,3,1]
输出: true
示例 2:

输入: [1,2,3,4]
输出: false

示例?3:

输入: [1,1,1,3,3,4,3,2,4,2]
输出: true


*/
class Solution {
    public boolean containsDuplicate(int[] nums) {
  Set<Integer>set=new HashSet<>();
  for(int x:nums){
   if(set.contains(x)){
    return true;
   }else{
       set.add(x);
   }
  }
  return false;
    }
}
/*你的朋友正在使用键盘输入他的名字?name。偶尔，在键入字符?c?时，按键可能会被长按，而字符可能被输入 1 次或多次。

你将会检查键盘输入的字符?typed。
如果它对应的可能是你的朋友的名字（其中一些字符可能被长按），那么就返回?True。

?


示例 1：

输入：name = "alex", typed = "aaleex"
输出：true
解释：'alex' 中的 'a' 和 'e' 被长按。

示例 2：

输入：name = "saeed", typed = "ssaaedd"
输出：false
解释：'e' 一定需要被键入两次，但在 typed 的输出中不是这样。

示例 3：

输入：name = "leelee", typed = "lleeelee"
输出：true

示例 4：

输入：name = "laiden", typed = "laiden"
输出：true
解释：长按名字中的字符并不是必要的。
*/
class Solution {
    public boolean isLongPressedName(String name, String typed) {
        if(name.length()>typed.length()||!typed.startsWith(name.substring(0,1))||!typed.endsWith(name.substring(name.length()-1,name.length()))){
         return false;
        }
    for(int i=0,j=0;i<name.length();++i,++j){
     String str=name.substring(i,i+1);
    while(j<typed.length()&&!str.equals(typed.charAt(j)+"")){
        if(!typed.substring(j,j+1).equals(name.substring(i-1,i))){
         return false;
        }
        j++;
    }
    if(i==name.length()-1&&j<typed.length()){
     while(str.equals(typed.substring(j,j+1))){
      j++;
      if(j==typed.length()){
      return true;
      }
     }
     return false;
    }
    if(j>=typed.length()){
     return false;
    }
    }
    return true;
    }
}