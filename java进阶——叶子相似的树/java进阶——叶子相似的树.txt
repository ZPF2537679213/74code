请考虑一棵二叉树上所有的叶子，这些叶子的值按从左到右的顺序排列形成一个 叶值序列 。
举个例子，如上图所示，给定一棵叶值序列为?(6, 7, 4, 9, 8)?的树。


如果有两棵二叉树的叶值序列是相同，那么我们就认为它们是?叶相似?的。


如果给定的两个头结点分别为?root1 和?root2?的树是叶相似的，则返回?true；否则返回 false 
。


输入：root1 = [3,5,1,6,2,9,8,null,null,7,4], 
root2 = [3,5,1,6,7,4,2,null,null,null,null,null,null,9,8]

输出：true

示例 2：


输入：root1 = [1], 
root2 = [1]

输出：true

示例 3：


输入：root1 = [1],
 root2 = [2
]
输出：false

代码：
class Solution {
    public boolean leafSimilar(TreeNode root1, TreeNode root2) { 
    String s1=leaf(root1).toString();
    String s2=leaf(root2).toString();
    System.out.println(s1);
     System.out.println(s2);
    return s1.equals(s2);
    }
    public StringBuilder leaf(TreeNode root){
     if(root==null){
            return new StringBuilder();
     }
     if(root.left==null&&root.right==null){ 
      StringBuilder end=new StringBuilder();
      end.append(root.val+" ");
      return end;
     }
     StringBuilder left=new StringBuilder();
     StringBuilder right=new StringBuilder();
     left.append(leaf(root.left));
     left.append(leaf(root.right));
     return left.append(right);
    }
}